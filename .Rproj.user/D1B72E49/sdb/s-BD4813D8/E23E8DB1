{
    "contents" : "## Run analysis will:\n## 1. get the data (I will comment this out\n##   because I assume you have the data\n##   saved in the working directory \n##   already).\n\n## 2. Merge training and test sets\n## 3. Name activities in data set\n## 4. Label data variable name\n## 5. Create data set containing \n##    average (each activity) for each variable \n##    and subject\n\n##  unzip(\"getdata-projectfiles-UCI HAR Dataset.zip\")\n    list.files(\"UCI HAR Dataset\")\n  \n  ## Read in variable names so that I can know what they are\n    varNamesFile <- \"UCI HAR Dataset//features.txt\"\n    varNames <- read.table(varNamesFile, stringsAsFactors = FALSE)\n    ## The varnames comes in as the col number and then the\n    ## name.\n    ## I am converting to character type in order to \n    ## run grep on the variable names.\n    charVarNames <- as.character(varNames[, 2])\n    ## I am going to subset by the cols using std and mean\n    colsNeeded <- grep(\"mean()|std()\", charVarNames)\n    ## I choose to \n    \n  ## Test Data :\n    X_test = \"UCI HAR Dataset//test//X_test.txt\"\n    X_test <- read.table(X_test)\n    ## colnames(X_test) = varNames\n    subX_test <- X_test[, colsNeeded]\n    \n    Y_test = \"UCI HAR Dataset//test//Y_test.txt\"\n    Y_test <- read.table(Y_test)\n    X_test_ID <- \"UCI HAR Dataset//test//subject_test.txt\"\n    X_test_ID <- read.table(X_test_ID)\n    all_data_test <- cbind(X_test_ID,  Y_test, subX_test)\n    # Creating a variable for whether the record is \n    ## test or train is not necessary, as it will get reduced\n    ## in later parts anyway.\n    \n  ## Train Data:\n    X_train = \"UCI HAR Dataset//train//X_train.txt\"\n    X_train <- read.table(X_train)\n   ## colnames(X_train) = varNames\n    subX_train <- X_train[, colsNeeded]\n    \n    Y_train = \"UCI HAR Dataset//train//Y_train.txt\"\n    Y_train <- read.table(Y_train)\n    ## Train ID is the ~250 records ID so rep(1, 250), rep(2, 250), etc\n    X_train_ID <- \"UCI HAR Dataset//train//subject_train.txt\"\n    X_train_ID <- read.table(X_train_ID)\n    \n    all_data_train <- cbind(X_train_ID,  Y_train, subX_train)\n    \n  ## Merge the two data sets.\n    all_data <- rbind(all_data_test, all_data_train)\n    shortVars <- charVarNames[colsNeeded]\n    names(all_data) <- c(\"participantID\", \"typeofphysicalactivity\", shortVars)\n    \n  ## Clean up workspace:\n    remove(X_test_ID, X_train, X_train_ID, Y_train, Y_test, all_data_test, all_data_train, subX_train, subX_test)\n    remove(varNames, varNamesFile, X_test)\n  \n  ## Clean up variable names:\n      names(all_data) <- gsub(\"-meanFreq\\\\(\\\\)\", \"weightedfrequencyaverage\", names(all_data), )\n      names(all_data) <- gsub(\"tBody\", \"timedomainbody\", names(all_data),) \n      names(all_data) <- gsub(\"tgravity\", \"timedomainminusgravity\", names(all_data), )\n      names(all_data) <- gsub(\"Acc\", \"acceleration\", names(all_data))\n      names(all_data) <- gsub(\"fBody\", \"frequencydomainbody\", names(all_data),)\n      names(all_data) <- gsub(\"-X\", \"xaxis\", names(all_data), )\n      names(all_data) <- gsub(\"-Y\", \"yaxis\", names(all_data), )\n      names(all_data) <- gsub(\"-Z\", \"zaxis\", names(all_data), )\n      names(all_data) <- gsub(\"Gyro\", \"gyroscope\", names(all_data), )\n      names(all_data) <- gsub(\"Mag\", \"magnitude\", names(all_data), )\n      names(all_data) <- gsub(\"-mean\\\\(\\\\)\", \"mean\", names(all_data), )\n      names(all_data) <- gsub(\"-std\\\\(\\\\)\", \"standarddeviation\", names(all_data), )\n      names(all_data) <- gsub(\"\\\\(\\\\)\", \"\", names(all_data),)\n      names(all_data) <- gsub(\"bodyBody\", \"body\", names(all_data), )\n      \n      names(all_data) <- gsub(\"-\", \"\", names(all_data),)\n      names(all_data) <- tolower(names(all_data))\n \n  ## Add meaningful activity names:nrow(all_data)\n      activLabels <- read.table(\"UCI HAR Dataset//activity_labels.txt\")\n      for (i in 1 : 10299){\n        print (as.character(activLabels[all_data[i,2],2]))\n        all_data[i, 2] <- as.character(activLabels[all_data[i, 2], 2])    \n      }  \n    \n    \n  ## Sorting the averages for each person for each activity \n    agro_data <- aggregate(all_data, by = list(as.factor(all_data[, 2]), as.numeric(all_data[, 1])), FUN = mean)\n    \n  ## This will return an integer vector with \n## the columns that contain mean or std.\n##varNames[, 1] <- varNames[, 2]\n\n\n\n## we will need to rbind the Y_test to the X_test\n\n\n\n\n\n\n## before I combine I need to add a variable for whether the record \n## is a test or train record\n\n## Before that, I will remove variables not required\n## for this assignment.\n\n## From manually looking at the data, I find the following mean \n## values that are relevant to me:\n\n## Not sure yet...\n\n\n\n\n\n\n\n## We don't actually need anything from the Inertial Signals folder so \n## the following should be ignored:\n  ##X_body_acc_train = \"UCI HAR Dataset//train//Inertial Signals//body_acc_x_train.txt\"\n  ##X_body_acc_train = read.table(X_body_acc_train)\n  ## X_body_acc_train is 128 readings of X_body_acc_train for each participant\n## This will not be read in because our assignments wants the mean\n## This mean is alreay calculated in our X_train file.\n\n## According to the readme, the Y-test/y-train links the data\n## with which activity the record refers to.\n\n\n\n",
    "created" : 1429652674616.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4148099693",
    "id" : "E23E8DB1",
    "lastKnownWriteTime" : 1429898082,
    "path" : "~/School Files/Open Courseware/Coursera/Getting Data/Project/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}